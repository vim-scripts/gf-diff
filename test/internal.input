function s:describe__gf_diff_parse_hunk_header_line()  "{{{1
  It should work properly.

  Should gf#diff#parse_hunk_header_line('@@ -787,14 +787,6 @@') == [787, 787]
  Should gf#diff#parse_hunk_header_line('@@ -803,6 +1795,14 @@') == [803, 1795]
  Should gf#diff#parse_hunk_header_line('@@ -803,6 +1795,14 @@ main(ac, av)') == [803, 1795]
  Should gf#diff#parse_hunk_header_line('@ -1803,6 +1795,14 @@') == 0
  Should gf#diff#parse_hunk_header_line('@@ -1803,6 +1795,14 @') == 0
endfunction




function s:describe__gf_diff_parse_hunk()  "{{{1
  It should work properly.

  Should gf#diff#parse_hunk(['@@ ...', '', '', '', '']) == [-1, -1]
  Should gf#diff#parse_hunk(['@@ ...', '', '+', '', '']) == [-1, 1]
  Should gf#diff#parse_hunk(['@@ ...', '', '', '-', '']) == [2, -1]
  Should gf#diff#parse_hunk(['@@ ...', '', '+', '-', '']) == [1, 1]
endfunction




function s:describe__gf_diff_parse_diff_header_line()  "{{{1
  It should work properly.

  Should gf#diff#parse_diff_header_line('diff --git a/foo/bar/baz.qux b/foo/bar/baz.qux') == ['foo/bar/baz.qux', 'foo/bar/baz.qux']
  Should gf#diff#parse_diff_header_line('diff --git a/foo/bar/baz.qux foo/bar/baz.qux') == ['foo/bar/baz.qux', 'foo/bar/baz.qux']
  Should gf#diff#parse_diff_header_line('diff --git foo/bar/baz.qux b/foo/bar/baz.qux') == ['foo/bar/baz.qux', 'foo/bar/baz.qux']
  Should gf#diff#parse_diff_header_line('diff --git foo/bar/baz.qux foo/bar/baz.qux') == ['foo/bar/baz.qux', 'foo/bar/baz.qux']
  Should gf#diff#parse_diff_header_line('diff --git a/foo.c b/bar.c') == ['foo.c', 'bar.c']
endfunction




function s:describe__gf_diff_investigate_the_hunk_under_the_cursor()  "{{{1
  It should work properly.

  let text = [
  \   'commit 3d7b818d6543e11ec706687c210360e4931fd43a',
  \   'Author: Foo Bar <baz@qux>',
  \   'Date:   Wed Jan 18 18:00:53 2012 +0900',
  \   '',
  \   '    Create a dummy commit to test vim-gf-diff',
  \   '',
  \   'diff --git a/autoload/gf/diff.vim.orig b/autoload/gf/diff.vim',
  \   'index 469fdb3..b135316 100644',
  \   '--- a/autoload/gf/diff.vim.orig',
  \   '+++ b/autoload/gf/diff.vim',
  \   '@@ -21,7 +22,7 @@',
  \   ' "     SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.',
  \   ' "',
  \   ' " Interface',
  \   '-function! gf#diff#go_to_hunk(type)',
  \   '+function! gf#diff#go(type)',
  \   '   let d = gf#diff#investigate_the_hunk_under_the_cursor()',
  \   '   if d is 0',
  \   '     echomsg ''There is no diff hunk to jump.''',
  \   '@@ -113,7 +114,7 @@ function! gf#diff#investigate_the_hunk_under_the_cursor()',
  \   '       return 0',
  \   '     endif',
  \   '     let [d.from_path, d.to_path] = xs',
  \   '+  call setpos(''.'', original_position)',
  \   '-  call setpos(original_position)',
  \   ' ',
  \   '   return d',
  \   ' endfunction',
  \   'diff --git a/test/internal.input b/test/internal.input',
  \   'index 5395371..8ac577f 100644',
  \   '--- a/test/internal.input',
  \   '+++ b/test/internal.input',
  \   '@@ -37,7 +38,9 @@ endfunction',
  \   ' function s:describe__gf_diff_investigate_the_hunk_under_the_cursor()',
  \   '   It should work properly.',
  \   ' ',
  \   '+  tabnew',
  \   '+    j',
  \   '-  " FIXME: NWY',
  \   '+  tabclose!',
  \   ' endfunction',
  \   ' ',
  \   ' ',
  \ ]

  tabnew
    call setline(1, text)

    normal! 12gg
    let pos = getpos('.')
    let d = gf#diff#investigate_the_hunk_under_the_cursor()
    Should getpos('.') == pos
    Should type(d) == type({})
    Should d.from_first_lineno == 21
    Should d.to_first_lineno == 22
    Should d.firstly_deleted_offset == 3
    Should d.firstly_inserted_offset == 3
    Should d.from_path ==# 'autoload/gf/diff.vim.orig'
    Should d.to_path ==# 'autoload/gf/diff.vim'
    unlet d

    normal! 20gg
    let pos = getpos('.')
    let d = gf#diff#investigate_the_hunk_under_the_cursor()
    Should getpos('.') == pos
    Should type(d) == type({})
    Should d.from_first_lineno == 113
    Should d.to_first_lineno == 114
    Should d.firstly_deleted_offset == 3
    Should d.firstly_inserted_offset == 3
    Should d.from_path ==# 'autoload/gf/diff.vim.orig'
    Should d.to_path ==# 'autoload/gf/diff.vim'
    unlet d

    normal! 41gg
    let pos = getpos('.')
    let d = gf#diff#investigate_the_hunk_under_the_cursor()
    Should getpos('.') == pos
    Should type(d) == type({})
    Should d.from_first_lineno == 37
    Should d.to_first_lineno == 38
    Should d.firstly_deleted_offset == 3
    Should d.firstly_inserted_offset == 3
    Should d.from_path ==# 'test/internal.input'
    Should d.to_path ==# 'test/internal.input'
    unlet d

    normal! 9gg
    let pos = getpos('.')
    let d = gf#diff#investigate_the_hunk_under_the_cursor()
    Should getpos('.') == pos
    Should type(d) == type({})
    Should d.from_first_lineno == 21
    Should d.to_first_lineno == 22
    Should d.firstly_deleted_offset == 3
    Should d.firstly_inserted_offset == 3
    Should d.from_path ==# 'autoload/gf/diff.vim.orig'
    Should d.to_path ==# 'autoload/gf/diff.vim'
    unlet d

    normal! 6gg
    let pos = getpos('.')
    let d = gf#diff#investigate_the_hunk_under_the_cursor()
    Should getpos('.') == pos
    Should d is 0
    unlet d
  tabclose!
endfunction




function s:describe__gf_diff_calculate_better_lineno()  "{{{1
  It should work properly.

  let f = {}
  function! f.c(type, flineno, tlineno, doffset, ioffset)
    return gf#diff#calculate_better_lineno(
    \   a:type,
    \   {
    \     'from_first_lineno': a:flineno,
    \     'to_first_lineno': a:tlineno,
    \     'firstly_deleted_offset': a:doffset,
    \     'firstly_inserted_offset': a:ioffset,
    \   }
    \ )
  endfunction

  Should f.c('to', 100, 200, -1, -1) == 200
  Should f.c('to', 100, 200, 3, -1) == 203
  Should f.c('to', 100, 200, -1, 4) == 204
  Should f.c('to', 100, 200, 3, 4) == 203
  Should f.c('from', 100, 200, -1, -1) == 100
  Should f.c('from', 100, 200, 3, -1) == 103
  Should f.c('from', 100, 200, -1, 4) == 104
  Should f.c('from', 100, 200, 3, 4) == 103
endfunction




" __END__  "{{{1
" vim: filetype=vim foldmethod=marker
